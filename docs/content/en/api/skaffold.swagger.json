{
  "swagger": "2.0",
  "info": {
    "version": "version not set",
    "description": "skaffold.proto"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/build/auto_execute": {
      "put": {
        "summary": "Allows for enabling or disabling automatic build trigger",
        "operationId": "AutoBuild",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoTriggerState"
            }
          }
        ],
        "tags": [
          "SkaffoldService"
        ]
      }
    },
    "/v1/deploy/auto_execute": {
      "put": {
        "summary": "Allows for enabling or disabling automatic deploy trigger",
        "operationId": "AutoDeploy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoTriggerState"
            }
          }
        ],
        "tags": [
          "SkaffoldService"
        ]
      }
    },
    "/v1/event_log": {
      "get": {
        "summary": "DEPRECATED. Events should be used instead.\nTODO remove (https://github.com/GoogleContainerTools/skaffold/issues/3168)",
        "operationId": "EventLog",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/protoLogEntry"
            }
          }
        },
        "parameters": [
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "event.metaEvent.entry",
            "description": "entry, for example: `\"Starting Skaffold: {Version:v0.39.0-16-g5bb7c9e0 ConfigVersion:skaffold/v1 GitVersion: GitCommit:5bb7c9e078e4d522a5ffc42a2f1274fd17d75902 GitTreeState:dirty BuildDate01:29Z GoVersion:go1.13rc1 Compiler:gc Platform:linux/amd64}\"`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.metaEvent.metadata.build.numberOfArtifacts",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "event.metaEvent.metadata.build.type",
            "description": " - UNKNOWN_BUILD_TYPE: Could not determine Build Type\n - CLUSTER: Cluster Build\n - GCB: GCB Build\n - LOCAL: Local Build",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN_BUILD_TYPE",
              "CLUSTER",
              "GCB",
              "LOCAL"
            ],
            "default": "UNKNOWN_BUILD_TYPE"
          },
          {
            "name": "event.metaEvent.metadata.deploy.cluster",
            "description": " - UNKNOWN_CLUSTER_TYPE: Could not determine Cluster Type\n - MINIKUBE: Minikube Cluster\n - GKE: GKE cluster\n - OTHER: All Cluster except Minikube and GKE",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN_CLUSTER_TYPE",
              "MINIKUBE",
              "GKE",
              "OTHER"
            ],
            "default": "UNKNOWN_CLUSTER_TYPE"
          },
          {
            "name": "event.buildEvent.artifact",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.buildEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.buildEvent.err",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.buildEvent.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.buildEvent.actionableErr.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.buildEvent.actionableErr.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.deployEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.deployEvent.err",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.deployEvent.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.deployEvent.actionableErr.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.deployEvent.actionableErr.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.localPort",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "event.portEvent.remotePort",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "event.portEvent.podName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.containerName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.portName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.resourceType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.portEvent.targetPort.type",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "event.portEvent.targetPort.intVal",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "event.portEvent.targetPort.strVal",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.statusCheckEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.statusCheckEvent.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.statusCheckEvent.err",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.statusCheckEvent.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.statusCheckEvent.actionableErr.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.statusCheckEvent.actionableErr.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.resourceStatusCheckEvent.resource",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.resourceStatusCheckEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.resourceStatusCheckEvent.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.resourceStatusCheckEvent.err",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.resourceStatusCheckEvent.statusCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.resourceStatusCheckEvent.actionableErr.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.resourceStatusCheckEvent.actionableErr.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.fileSyncEvent.fileCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "event.fileSyncEvent.image",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.fileSyncEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.fileSyncEvent.err",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.fileSyncEvent.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.fileSyncEvent.actionableErr.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.fileSyncEvent.actionableErr.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.debuggingContainerEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.debuggingContainerEvent.podName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.debuggingContainerEvent.containerName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.debuggingContainerEvent.namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.debuggingContainerEvent.artifact",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.debuggingContainerEvent.runtime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.debuggingContainerEvent.workingDir",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.devLoopEvent.iteration",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "event.devLoopEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.devLoopEvent.err.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.devLoopEvent.err.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.terminationEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.terminationEvent.err.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.terminationEvent.err.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.TestEvent.status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "event.TestEvent.actionableErr.errCode",
            "description": " - OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "OK",
              "STATUSCHECK_SUCCESS",
              "BUILD_SUCCESS",
              "DEPLOY_SUCCESS",
              "TEST_SUCCESS",
              "BUILD_PUSH_ACCESS_DENIED",
              "BUILD_PROJECT_NOT_FOUND",
              "BUILD_DOCKER_DAEMON_NOT_RUNNING",
              "BUILD_USER_ERROR",
              "BUILD_DOCKER_UNAVAILABLE",
              "BUILD_DOCKER_UNAUTHORIZED",
              "BUILD_DOCKER_SYSTEM_ERR",
              "BUILD_DOCKER_NOT_MODIFIED_ERR",
              "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
              "BUILD_DOCKER_DATA_LOSS_ERR",
              "BUILD_DOCKER_FORBIDDEN_ERR",
              "BUILD_DOCKER_CONFLICT_ERR",
              "BUILD_DOCKER_ERROR_NOT_FOUND",
              "BUILD_DOCKER_INVALID_PARAM_ERR",
              "BUILD_DOCKERFILE_NOT_FOUND",
              "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
              "BUILD_DOCKER_GET_DIGEST_ERR",
              "BUILD_REGISTRY_GET_DIGEST_ERR",
              "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
              "BUILD_JIB_GRADLE_DEP_ERR",
              "BUILD_JIB_MAVEN_DEP_ERR",
              "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
              "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
              "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
              "STATUSCHECK_IMAGE_PULL_ERR",
              "STATUSCHECK_CONTAINER_CREATING",
              "STATUSCHECK_RUN_CONTAINER_ERR",
              "STATUSCHECK_CONTAINER_TERMINATED",
              "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
              "STATUSCHECK_CONTAINER_RESTARTING",
              "STATUSCHECK_UNHEALTHY",
              "STATUSCHECK_NODE_MEMORY_PRESSURE",
              "STATUSCHECK_NODE_DISK_PRESSURE",
              "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
              "STATUSCHECK_NODE_PID_PRESSURE",
              "STATUSCHECK_NODE_UNSCHEDULABLE",
              "STATUSCHECK_NODE_UNREACHABLE",
              "STATUSCHECK_NODE_NOT_READY",
              "STATUSCHECK_FAILED_SCHEDULING",
              "STATUSCHECK_KUBECTL_CONNECTION_ERR",
              "STATUSCHECK_KUBECTL_PID_KILLED",
              "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
              "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
              "STATUSCHECK_POD_INITIALIZING",
              "UNKNOWN_ERROR",
              "STATUSCHECK_UNKNOWN",
              "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
              "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
              "STATUSCHECK_UNKNOWN_EVENT",
              "DEPLOY_UNKNOWN",
              "SYNC_UNKNOWN",
              "BUILD_UNKNOWN",
              "DEVINIT_UNKNOWN",
              "CLEANUP_UNKNOWN",
              "INIT_UNKNOWN",
              "BUILD_DOCKER_UNKNOWN",
              "TEST_UNKNOWN",
              "SYNC_INIT_ERROR",
              "DEVINIT_REGISTER_BUILD_DEPS",
              "DEVINIT_REGISTER_TEST_DEPS",
              "DEVINIT_REGISTER_DEPLOY_DEPS",
              "DEVINIT_REGISTER_CONFIG_DEP",
              "DEVINIT_UNSUPPORTED_V1_MANIFEST",
              "STATUSCHECK_USER_CANCELLED",
              "STATUSCHECK_DEADLINE_EXCEEDED",
              "BUILD_CANCELLED",
              "DEPLOY_CANCELLED",
              "BUILD_DOCKER_CANCELLED",
              "BUILD_DOCKER_DEADLINE",
              "INIT_CREATE_TAGGER_ERROR",
              "INIT_MINIKUBE_PAUSED_ERROR",
              "INIT_MINIKUBE_NOT_RUNNING_ERROR",
              "INIT_CREATE_BUILDER_ERROR",
              "INIT_CREATE_DEPLOYER_ERROR",
              "INIT_CREATE_TEST_DEP_ERROR",
              "INIT_CACHE_ERROR",
              "INIT_CREATE_WATCH_TRIGGER_ERROR",
              "INIT_CREATE_ARTIFACT_DEP_ERROR",
              "DEPLOY_CLUSTER_CONNECTION_ERR",
              "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
              "DEPLOY_CLEANUP_ERR",
              "DEPLOY_HELM_APPLY_LABELS",
              "DEPLOY_HELM_USER_ERR",
              "DEPLOY_NO_MATCHING_BUILD",
              "DEPLOY_HELM_VERSION_ERR",
              "DEPLOY_HELM_MIN_VERSION_ERR",
              "DEPLOY_KUBECTL_VERSION_ERR",
              "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
              "DEPLOY_ERR_WAITING_FOR_DELETION",
              "DEPLOY_READ_MANIFEST_ERR",
              "DEPLOY_READ_REMOTE_MANIFEST_ERR",
              "DEPLOY_LIST_MANIFEST_ERR",
              "DEPLOY_KUBECTL_USER_ERR",
              "DEPLOY_KUSTOMIZE_USER_ERR",
              "DEPLOY_REPLACE_IMAGE_ERR",
              "DEPLOY_TRANSFORM_MANIFEST_ERR",
              "DEPLOY_SET_LABEL_ERR",
              "DEPLOY_MANIFEST_WRITE_ERR",
              "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
              "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
              "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
              "TEST_USER_CONFIG_ERR",
              "TEST_CST_USER_ERR",
              "TEST_IMG_PULL_ERR"
            ],
            "default": "OK"
          },
          {
            "name": "event.TestEvent.actionableErr.message",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entry",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SkaffoldService"
        ]
      }
    },
    "/v1/events": {
      "get": {
        "summary": "Returns all the events of the current Skaffold execution from the start",
        "operationId": "Events",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/protoLogEntry"
            }
          }
        },
        "tags": [
          "SkaffoldService"
        ]
      }
    },
    "/v1/events/handle": {
      "post": {
        "summary": "EXPERIMENTAL. It allows for custom events to be implemented in custom builders for example.",
        "operationId": "Handle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoEvent"
            }
          }
        ],
        "tags": [
          "SkaffoldService"
        ]
      }
    },
    "/v1/execute": {
      "post": {
        "summary": "Allows for a single execution of some or all of the phases (build, sync, deploy) in case autoBuild, autoDeploy or autoSync are disabled.",
        "operationId": "Execute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoIntent"
            }
          }
        ],
        "tags": [
          "SkaffoldService"
        ]
      }
    },
    "/v1/state": {
      "get": {
        "summary": "Returns the state of the current Skaffold execution",
        "operationId": "GetState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoState"
            }
          }
        },
        "tags": [
          "SkaffoldService"
        ]
      }
    },
    "/v1/sync/auto_execute": {
      "put": {
        "summary": "Allows for enabling or disabling automatic sync trigger",
        "operationId": "AutoSync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoTriggerState"
            }
          }
        ],
        "tags": [
          "SkaffoldService"
        ]
      }
    }
  },
  "definitions": {
    "BuildMetadataImageBuilder": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/protoBuilderType"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeployMetadataDeployer": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/protoDeployerType"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TestMetadataTester": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/protoTesterType"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoActionableErr": {
      "type": "object",
      "properties": {
        "errCode": {
          "$ref": "#/definitions/protoStatusCode"
        },
        "message": {
          "type": "string"
        },
        "suggestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoSuggestion"
          }
        }
      },
      "description": "`ActionableErr` defines an error that occurred along with an optional list of suggestions"
    },
    "protoBuildEvent": {
      "type": "object",
      "properties": {
        "artifact": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "err": {
          "type": "string"
        },
        "errCode": {
          "$ref": "#/definitions/protoStatusCode"
        },
        "actionableErr": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "`BuildEvent` describes the build status per artifact, and will be emitted by Skaffold anytime a build starts or finishes, successfully or not.\nIf the build fails, an error will be attached to the event."
    },
    "protoBuildMetadata": {
      "type": "object",
      "properties": {
        "numberOfArtifacts": {
          "type": "integer",
          "format": "int32"
        },
        "builders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildMetadataImageBuilder"
          }
        },
        "type": {
          "$ref": "#/definitions/protoBuildType"
        },
        "additional": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional key value pairs to describe the deploy pipeline"
        }
      }
    },
    "protoBuildState": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of `artifact name -> build-state`.\nArtifact name is defined in the `skaffold.yaml`.\nThe `build-state` can be: <br>\n- `\"Not started\"`: not yet started <br>\n- `\"In progress\"`: build started <br>\n- `\"Complete\"`: build succeeded <br>\n- `\"Failed\"`: build failed"
        },
        "autoTrigger": {
          "type": "boolean",
          "format": "boolean"
        },
        "statusCode": {
          "$ref": "#/definitions/protoStatusCode"
        }
      },
      "description": "`BuildState` maps Skaffold artifacts to their current build states"
    },
    "protoBuildType": {
      "type": "string",
      "enum": [
        "UNKNOWN_BUILD_TYPE",
        "CLUSTER",
        "GCB",
        "LOCAL"
      ],
      "default": "UNKNOWN_BUILD_TYPE",
      "description": "Enum indicating build type i.e. local, cluster vs GCB\n- UNKNOWN_BUILD_TYPE: Could not determine Build Type\n - CLUSTER: Cluster Build\n - GCB: GCB Build\n - LOCAL: Local Build"
    },
    "protoBuilderType": {
      "type": "string",
      "enum": [
        "UNKNOWN_BUILDER_TYPE",
        "JIB",
        "BAZEL",
        "BUILDPACKS",
        "CUSTOM",
        "KANIKO",
        "DOCKER"
      ],
      "default": "UNKNOWN_BUILDER_TYPE",
      "description": "Enum indicating builders used\n- UNKNOWN_BUILDER_TYPE: Could not determine builder type\n - JIB: JIB Builder\n - BAZEL: Bazel Builder\n - BUILDPACKS: Buildpacks Builder\n - CUSTOM: Custom Builder\n - KANIKO: Kaniko Builder\n - DOCKER: Docker Builder"
    },
    "protoClusterType": {
      "type": "string",
      "enum": [
        "UNKNOWN_CLUSTER_TYPE",
        "MINIKUBE",
        "GKE",
        "OTHER"
      ],
      "default": "UNKNOWN_CLUSTER_TYPE",
      "description": "Enum indicating cluster type the application is deployed to\n- UNKNOWN_CLUSTER_TYPE: Could not determine Cluster Type\n - MINIKUBE: Minikube Cluster\n - GKE: GKE cluster\n - OTHER: All Cluster except Minikube and GKE"
    },
    "protoDebuggingContainerEvent": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "podName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "artifact": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "workingDir": {
          "type": "string"
        },
        "debugPorts": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "DebuggingContainerEvent is raised when a debugging container is started or terminated"
    },
    "protoDeployEvent": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "err": {
          "type": "string"
        },
        "errCode": {
          "$ref": "#/definitions/protoStatusCode"
        },
        "actionableErr": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "`DeployEvent` represents the status of a deployment, and is emitted by Skaffold\nanytime a deployment starts or completes, successfully or not."
    },
    "protoDeployMetadata": {
      "type": "object",
      "properties": {
        "deployers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeployMetadataDeployer"
          }
        },
        "cluster": {
          "$ref": "#/definitions/protoClusterType"
        }
      }
    },
    "protoDeployState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "autoTrigger": {
          "type": "boolean",
          "format": "boolean"
        },
        "statusCode": {
          "$ref": "#/definitions/protoStatusCode"
        }
      },
      "description": "`DeployState` describes the status of the current deploy"
    },
    "protoDeployerType": {
      "type": "string",
      "enum": [
        "UNKNOWN_DEPLOYER_TYPE",
        "HELM",
        "KUSTOMIZE",
        "KUBECTL"
      ],
      "default": "UNKNOWN_DEPLOYER_TYPE",
      "description": "Enum indicating deploy tools used\n- UNKNOWN_DEPLOYER_TYPE: Could not determine Deployer Type\n - HELM: Helm Deployer\n - KUSTOMIZE: Kustomize Deployer\n - KUBECTL: Kubectl Deployer"
    },
    "protoDevLoopEvent": {
      "type": "object",
      "properties": {
        "iteration": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "err": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "`DevLoopEvent` marks the start and end of a dev loop."
    },
    "protoEvent": {
      "type": "object",
      "properties": {
        "metaEvent": {
          "$ref": "#/definitions/protoMetaEvent"
        },
        "buildEvent": {
          "$ref": "#/definitions/protoBuildEvent"
        },
        "deployEvent": {
          "$ref": "#/definitions/protoDeployEvent"
        },
        "portEvent": {
          "$ref": "#/definitions/protoPortEvent"
        },
        "statusCheckEvent": {
          "$ref": "#/definitions/protoStatusCheckEvent"
        },
        "resourceStatusCheckEvent": {
          "$ref": "#/definitions/protoResourceStatusCheckEvent"
        },
        "fileSyncEvent": {
          "$ref": "#/definitions/protoFileSyncEvent"
        },
        "debuggingContainerEvent": {
          "$ref": "#/definitions/protoDebuggingContainerEvent"
        },
        "devLoopEvent": {
          "$ref": "#/definitions/protoDevLoopEvent"
        },
        "terminationEvent": {
          "$ref": "#/definitions/protoTerminationEvent"
        },
        "TestEvent": {
          "$ref": "#/definitions/protoTestEvent"
        }
      },
      "description": "`Event` describes an event in the Skaffold process.\nIt is one of MetaEvent, BuildEvent, TestEvent, DeployEvent, PortEvent, StatusCheckEvent, ResourceStatusCheckEvent, FileSyncEvent, or DebuggingContainerEvent."
    },
    "protoFileSyncEvent": {
      "type": "object",
      "properties": {
        "fileCount": {
          "type": "integer",
          "format": "int32"
        },
        "image": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "err": {
          "type": "string"
        },
        "errCode": {
          "$ref": "#/definitions/protoStatusCode"
        },
        "actionableErr": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "FileSyncEvent describes the sync status."
    },
    "protoFileSyncState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "autoTrigger": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "`FileSyncState` contains the status of the current file sync"
    },
    "protoIntOrString": {
      "type": "object",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "intVal": {
          "type": "integer",
          "format": "int32"
        },
        "strVal": {
          "type": "string"
        }
      },
      "description": "IntOrString is a type that can hold an int32 or a string."
    },
    "protoIntent": {
      "type": "object",
      "properties": {
        "build": {
          "type": "boolean",
          "format": "boolean"
        },
        "sync": {
          "type": "boolean",
          "format": "boolean"
        },
        "deploy": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "Intent represents user intents for a given phase."
    },
    "protoLogEntry": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "event": {
          "$ref": "#/definitions/protoEvent"
        },
        "entry": {
          "type": "string"
        }
      },
      "description": "LogEntry describes an event and a string description of the event."
    },
    "protoMetaEvent": {
      "type": "object",
      "properties": {
        "entry": {
          "type": "string",
          "description": "entry, for example: `\"Starting Skaffold: {Version:v0.39.0-16-g5bb7c9e0 ConfigVersion:skaffold/v1 GitVersion: GitCommit:5bb7c9e078e4d522a5ffc42a2f1274fd17d75902 GitTreeState:dirty BuildDate01:29Z GoVersion:go1.13rc1 Compiler:gc Platform:linux/amd64}\"`"
        },
        "metadata": {
          "$ref": "#/definitions/protoMetadata",
          "description": "Metadata describing skaffold pipeline"
        }
      },
      "description": "`MetaEvent` provides general information regarding Skaffold"
    },
    "protoMetadata": {
      "type": "object",
      "properties": {
        "build": {
          "$ref": "#/definitions/protoBuildMetadata"
        },
        "deploy": {
          "$ref": "#/definitions/protoDeployMetadata"
        },
        "test": {
          "$ref": "#/definitions/protoTestMetadata"
        },
        "additional": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional key value pairs to describe the build pipeline"
        }
      }
    },
    "protoPortEvent": {
      "type": "object",
      "properties": {
        "localPort": {
          "type": "integer",
          "format": "int32"
        },
        "remotePort": {
          "type": "integer",
          "format": "int32"
        },
        "podName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "portName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "targetPort": {
          "$ref": "#/definitions/protoIntOrString"
        }
      },
      "description": "PortEvent Event describes each port forwarding event."
    },
    "protoResourceStatusCheckEvent": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "err": {
          "type": "string"
        },
        "statusCode": {
          "$ref": "#/definitions/protoStatusCode"
        },
        "actionableErr": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "A Resource StatusCheck Event, indicates progress for each kubernetes deployment.\nFor every resource, there will be exactly one event with `status` *Succeeded* or *Failed* event.\nThere can be multiple events with `status` *Pending*.\nSkaffold polls for resource status every 0.5 second. If the resource status changes, an event with `status` “Pending”, “Complete” and “Failed”\nwill be sent with the new status."
    },
    "protoState": {
      "type": "object",
      "properties": {
        "buildState": {
          "$ref": "#/definitions/protoBuildState"
        },
        "deployState": {
          "$ref": "#/definitions/protoDeployState"
        },
        "forwardedPorts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protoPortEvent"
          }
        },
        "statusCheckState": {
          "$ref": "#/definitions/protoStatusCheckState"
        },
        "fileSyncState": {
          "$ref": "#/definitions/protoFileSyncState"
        },
        "debuggingContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protoDebuggingContainerEvent"
          }
        },
        "metadata": {
          "$ref": "#/definitions/protoMetadata"
        },
        "testState": {
          "$ref": "#/definitions/protoTestState"
        }
      },
      "description": "`State` represents the current state of the Skaffold components"
    },
    "protoStatusCheckEvent": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "err": {
          "type": "string"
        },
        "errCode": {
          "$ref": "#/definitions/protoStatusCode"
        },
        "actionableErr": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "`StatusCheckEvent` describes if the status check for kubernetes rollout has started, is in progress, has succeeded or failed."
    },
    "protoStatusCheckState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map of `resource name -> status-check-state`. Where `resource-name` is the kubernetes resource name.\nThe `status-check-state` can be <br>\n- `\"Not started\"`: indicates that `status-check` has just started. <br>\n- `\"In progress\"`: InProgress is sent after every resource check is complete. <br>\n- `\"Succeeded\"`:\n- `\"Failed\"`:"
        },
        "statusCode": {
          "$ref": "#/definitions/protoStatusCode",
          "description": "StatusCheck statusCode"
        }
      },
      "description": "`StatusCheckState` describes the state of status check of current deployed resources."
    },
    "protoStatusCode": {
      "type": "string",
      "enum": [
        "OK",
        "STATUSCHECK_SUCCESS",
        "BUILD_SUCCESS",
        "DEPLOY_SUCCESS",
        "TEST_SUCCESS",
        "BUILD_PUSH_ACCESS_DENIED",
        "BUILD_PROJECT_NOT_FOUND",
        "BUILD_DOCKER_DAEMON_NOT_RUNNING",
        "BUILD_USER_ERROR",
        "BUILD_DOCKER_UNAVAILABLE",
        "BUILD_DOCKER_UNAUTHORIZED",
        "BUILD_DOCKER_SYSTEM_ERR",
        "BUILD_DOCKER_NOT_MODIFIED_ERR",
        "BUILD_DOCKER_NOT_IMPLEMENTED_ERR",
        "BUILD_DOCKER_DATA_LOSS_ERR",
        "BUILD_DOCKER_FORBIDDEN_ERR",
        "BUILD_DOCKER_CONFLICT_ERR",
        "BUILD_DOCKER_ERROR_NOT_FOUND",
        "BUILD_DOCKER_INVALID_PARAM_ERR",
        "BUILD_DOCKERFILE_NOT_FOUND",
        "BUILD_DOCKER_CACHE_FROM_PULL_ERR",
        "BUILD_DOCKER_GET_DIGEST_ERR",
        "BUILD_REGISTRY_GET_DIGEST_ERR",
        "BUILD_UNKNOWN_JIB_PLUGIN_TYPE",
        "BUILD_JIB_GRADLE_DEP_ERR",
        "BUILD_JIB_MAVEN_DEP_ERR",
        "INIT_DOCKER_NETWORK_LISTING_CONTAINERS",
        "INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME",
        "INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST",
        "STATUSCHECK_IMAGE_PULL_ERR",
        "STATUSCHECK_CONTAINER_CREATING",
        "STATUSCHECK_RUN_CONTAINER_ERR",
        "STATUSCHECK_CONTAINER_TERMINATED",
        "STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING",
        "STATUSCHECK_CONTAINER_RESTARTING",
        "STATUSCHECK_UNHEALTHY",
        "STATUSCHECK_NODE_MEMORY_PRESSURE",
        "STATUSCHECK_NODE_DISK_PRESSURE",
        "STATUSCHECK_NODE_NETWORK_UNAVAILABLE",
        "STATUSCHECK_NODE_PID_PRESSURE",
        "STATUSCHECK_NODE_UNSCHEDULABLE",
        "STATUSCHECK_NODE_UNREACHABLE",
        "STATUSCHECK_NODE_NOT_READY",
        "STATUSCHECK_FAILED_SCHEDULING",
        "STATUSCHECK_KUBECTL_CONNECTION_ERR",
        "STATUSCHECK_KUBECTL_PID_KILLED",
        "STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR",
        "STATUSCHECK_DEPLOYMENT_FETCH_ERR",
        "STATUSCHECK_POD_INITIALIZING",
        "UNKNOWN_ERROR",
        "STATUSCHECK_UNKNOWN",
        "STATUSCHECK_UNKNOWN_UNSCHEDULABLE",
        "STATUSCHECK_CONTAINER_WAITING_UNKNOWN",
        "STATUSCHECK_UNKNOWN_EVENT",
        "DEPLOY_UNKNOWN",
        "SYNC_UNKNOWN",
        "BUILD_UNKNOWN",
        "DEVINIT_UNKNOWN",
        "CLEANUP_UNKNOWN",
        "INIT_UNKNOWN",
        "BUILD_DOCKER_UNKNOWN",
        "TEST_UNKNOWN",
        "SYNC_INIT_ERROR",
        "DEVINIT_REGISTER_BUILD_DEPS",
        "DEVINIT_REGISTER_TEST_DEPS",
        "DEVINIT_REGISTER_DEPLOY_DEPS",
        "DEVINIT_REGISTER_CONFIG_DEP",
        "DEVINIT_UNSUPPORTED_V1_MANIFEST",
        "STATUSCHECK_USER_CANCELLED",
        "STATUSCHECK_DEADLINE_EXCEEDED",
        "BUILD_CANCELLED",
        "DEPLOY_CANCELLED",
        "BUILD_DOCKER_CANCELLED",
        "BUILD_DOCKER_DEADLINE",
        "INIT_CREATE_TAGGER_ERROR",
        "INIT_MINIKUBE_PAUSED_ERROR",
        "INIT_MINIKUBE_NOT_RUNNING_ERROR",
        "INIT_CREATE_BUILDER_ERROR",
        "INIT_CREATE_DEPLOYER_ERROR",
        "INIT_CREATE_TEST_DEP_ERROR",
        "INIT_CACHE_ERROR",
        "INIT_CREATE_WATCH_TRIGGER_ERROR",
        "INIT_CREATE_ARTIFACT_DEP_ERROR",
        "DEPLOY_CLUSTER_CONNECTION_ERR",
        "DEPLOY_DEBUG_HELPER_RETRIEVE_ERR",
        "DEPLOY_CLEANUP_ERR",
        "DEPLOY_HELM_APPLY_LABELS",
        "DEPLOY_HELM_USER_ERR",
        "DEPLOY_NO_MATCHING_BUILD",
        "DEPLOY_HELM_VERSION_ERR",
        "DEPLOY_HELM_MIN_VERSION_ERR",
        "DEPLOY_KUBECTL_VERSION_ERR",
        "DEPLOY_KUBECTL_OFFLINE_MODE_ERR",
        "DEPLOY_ERR_WAITING_FOR_DELETION",
        "DEPLOY_READ_MANIFEST_ERR",
        "DEPLOY_READ_REMOTE_MANIFEST_ERR",
        "DEPLOY_LIST_MANIFEST_ERR",
        "DEPLOY_KUBECTL_USER_ERR",
        "DEPLOY_KUSTOMIZE_USER_ERR",
        "DEPLOY_REPLACE_IMAGE_ERR",
        "DEPLOY_TRANSFORM_MANIFEST_ERR",
        "DEPLOY_SET_LABEL_ERR",
        "DEPLOY_MANIFEST_WRITE_ERR",
        "DEPLOY_PARSE_MANIFEST_IMAGES_ERR",
        "DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE",
        "DEPLOY_CLUSTER_INTERNAL_SYSTEM_ERR",
        "TEST_USER_CONFIG_ERR",
        "TEST_CST_USER_ERR",
        "TEST_IMG_PULL_ERR"
      ],
      "default": "OK",
      "description": "Enum for Status codes<br>\nThese error codes are prepended by Phase Name e.g.\nINIT, BUILD, TEST, DEPLOY, STATUSCHECK, DEVINIT<br>\nFor Success Error codes, use range 200 to 250.<br>\nFor Unknown error codes, use range 500 to 600.<br>\nFor Cancelled Error code, use range 800 to 850.<br>\n- OK: A default status code for events that do not have an associated phase.\nTypically seen with the DevEndEvent event on success.\n - STATUSCHECK_SUCCESS: Status Check Success\n - BUILD_SUCCESS: Build Success\n - DEPLOY_SUCCESS: Deploy Success\n - TEST_SUCCESS: Test Success\n - BUILD_PUSH_ACCESS_DENIED: Build error due to push access denied\n - BUILD_PROJECT_NOT_FOUND: Build error due to GCP project not found.\n - BUILD_DOCKER_DAEMON_NOT_RUNNING: Docker build error due to docker daemon not running\n - BUILD_USER_ERROR: Build error due to user application code, e.g. compilation error, dockerfile error etc\n - BUILD_DOCKER_UNAVAILABLE: Build error due to docker not available\n - BUILD_DOCKER_UNAUTHORIZED: Docker build error due to user not authorized to perform the action\n - BUILD_DOCKER_SYSTEM_ERR: Docker system build error\n - BUILD_DOCKER_NOT_MODIFIED_ERR: Docker build error due to Docker build container is already in the desired state\n - BUILD_DOCKER_NOT_IMPLEMENTED_ERR: Docker build error indicating a feature not supported\n - BUILD_DOCKER_DATA_LOSS_ERR: Docker build error indicates that for given build, data was lost or there is data corruption\n - BUILD_DOCKER_FORBIDDEN_ERR: Docker build error indicates user is forbidden to perform the build or step/action.\n - BUILD_DOCKER_CONFLICT_ERR: Docker build error due to some internal error and docker container state conflicts with the requested action and can't be performed\n - BUILD_DOCKER_ERROR_NOT_FOUND: Docker build error indicates the requested object does not exist\n - BUILD_DOCKER_INVALID_PARAM_ERR: Docker build error indication invalid parameter sent to docker command\n - BUILD_DOCKERFILE_NOT_FOUND: Docker build failed due to dockerfile not found\n - BUILD_DOCKER_CACHE_FROM_PULL_ERR: Docker build failed due `cacheFrom` user config error\n - BUILD_DOCKER_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from docker daemon.\n - BUILD_REGISTRY_GET_DIGEST_ERR: Build error due to digest for built artifact could not be retrieved from registry.\n - BUILD_UNKNOWN_JIB_PLUGIN_TYPE: Build error indicating unknown Jib plugin type. Should be one of [maven, gradle]\n - BUILD_JIB_GRADLE_DEP_ERR: Build error determining dependency for jib gradle project.\n - BUILD_JIB_MAVEN_DEP_ERR: Build error determining dependency for jib gradle project.\n - INIT_DOCKER_NETWORK_LISTING_CONTAINERS: Docker build error when listing containers.\n - INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME: Docker build error indicating an invalid container name (or id).\n - INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST: Docker build error indicating the container referenced does not exists in the docker context used.\n - STATUSCHECK_IMAGE_PULL_ERR: Container image pull error\n - STATUSCHECK_CONTAINER_CREATING: Container creating error\n - STATUSCHECK_RUN_CONTAINER_ERR: Container run error\n - STATUSCHECK_CONTAINER_TERMINATED: Container is already terminated\n - STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING: Deployment waiting for rollout\n - STATUSCHECK_CONTAINER_RESTARTING: Container restarting error\n - STATUSCHECK_UNHEALTHY: Readiness probe failed\n - STATUSCHECK_NODE_MEMORY_PRESSURE: Node memory pressure error\n - STATUSCHECK_NODE_DISK_PRESSURE: Node disk pressure error\n - STATUSCHECK_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - STATUSCHECK_NODE_PID_PRESSURE: Node PID pressure error\n - STATUSCHECK_NODE_UNSCHEDULABLE: Node unschedulable error\n - STATUSCHECK_NODE_UNREACHABLE: Node unreachable error\n - STATUSCHECK_NODE_NOT_READY: Node not ready error\n - STATUSCHECK_FAILED_SCHEDULING: Scheduler failure error\n - STATUSCHECK_KUBECTL_CONNECTION_ERR: Kubectl connection error\n - STATUSCHECK_KUBECTL_PID_KILLED: Kubectl process killed error\n - STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR: Kubectl client fetch err\n - STATUSCHECK_POD_INITIALIZING: Pod Initializing\n - UNKNOWN_ERROR: Could not determine error and phase\n - STATUSCHECK_UNKNOWN: Status Check error unknown\n - STATUSCHECK_UNKNOWN_UNSCHEDULABLE: Container is unschedulable due to unknown reasons\n - STATUSCHECK_CONTAINER_WAITING_UNKNOWN: Container is waiting due to unknown reason\n - STATUSCHECK_UNKNOWN_EVENT: Container event reason unknown\n - DEPLOY_UNKNOWN: Deploy failed due to unknown reason\n - SYNC_UNKNOWN: SYNC failed due to known reason\n - BUILD_UNKNOWN: Build failed due to unknown reason\n - DEVINIT_UNKNOWN: Dev Init failed due to unknown reason\n - CLEANUP_UNKNOWN: Cleanup failed due to unknown reason\n - INIT_UNKNOWN: Initialization of the Skaffold session failed due to unknown reason(s)\n - BUILD_DOCKER_UNKNOWN: Build failed due to docker unknown error\n - TEST_UNKNOWN: Test failed due to unknown reason\n - SYNC_INIT_ERROR: File Sync Initialize failure\n - DEVINIT_REGISTER_BUILD_DEPS: Failed to configure watcher for build dependencies in dev loop\n - DEVINIT_REGISTER_TEST_DEPS: Failed to configure watcher for test dependencies in dev loop\n - DEVINIT_REGISTER_DEPLOY_DEPS: Failed to configure watcher for deploy dependencies in dev loop\n - DEVINIT_REGISTER_CONFIG_DEP: Failed to configure watcher for Skaffold configuration file.\n - DEVINIT_UNSUPPORTED_V1_MANIFEST: Failed to configure watcher for build dependencies for a base image with v1 manifest.\n - STATUSCHECK_USER_CANCELLED: User cancelled the skaffold dev run\n - STATUSCHECK_DEADLINE_EXCEEDED: Deadline for status check exceeded\n - BUILD_CANCELLED: Build Cancelled\n - DEPLOY_CANCELLED: Deploy cancelled due to user cancellation or one or more deployers failed.\n - BUILD_DOCKER_CANCELLED: Docker build cancelled.\n - BUILD_DOCKER_DEADLINE: Build error due to docker deadline was reached before the docker action completed\n - INIT_CREATE_TAGGER_ERROR: Skaffold was unable to create the configured tagger\n - INIT_MINIKUBE_PAUSED_ERROR: Skaffold was unable to start as Minikube appears to be paused\n - INIT_MINIKUBE_NOT_RUNNING_ERROR: Skaffold was unable to start as Minikube appears to be stopped\n - INIT_CREATE_BUILDER_ERROR: Skaffold was unable to create a configured image builder\n - INIT_CREATE_DEPLOYER_ERROR: Skaffold was unable to create a configured deployer\n - INIT_CREATE_TEST_DEP_ERROR: Skaffold was unable to create a configured test\n - INIT_CACHE_ERROR: Skaffold encountered an error validating the artifact cache\n - INIT_CREATE_WATCH_TRIGGER_ERROR: Skaffold encountered an error when configuring file watching\n - INIT_CREATE_ARTIFACT_DEP_ERROR: Skaffold encountered an error when evaluating artifact dependencies\n - DEPLOY_CLUSTER_CONNECTION_ERR: Unable to connect to cluster\n - DEPLOY_DEBUG_HELPER_RETRIEVE_ERR: Could not retrieve debug helpers.\n - DEPLOY_CLEANUP_ERR: Deploy clean up error\n - DEPLOY_HELM_APPLY_LABELS: Unable to apply helm labels.\n - DEPLOY_HELM_USER_ERR: Deploy error due to user deploy config for helm deployer\n - DEPLOY_NO_MATCHING_BUILD: Helm error when no build result is found of value  specified in helm `artifactOverrides`\n - DEPLOY_HELM_VERSION_ERR: Unable to get helm client version\n - DEPLOY_HELM_MIN_VERSION_ERR: Helm version not supported.\n - DEPLOY_KUBECTL_VERSION_ERR: Unable to retrieve kubectl version\n - DEPLOY_KUBECTL_OFFLINE_MODE_ERR: User specified offline mode for rendering but remote manifests presents.\n - DEPLOY_ERR_WAITING_FOR_DELETION: Error waiting for previous version deletion before next version is active.\n - DEPLOY_READ_MANIFEST_ERR: Error reading manifests\n - DEPLOY_READ_REMOTE_MANIFEST_ERR: Error reading remote manifests\n - DEPLOY_LIST_MANIFEST_ERR: Errors listing manifests\n - DEPLOY_KUBECTL_USER_ERR: Deploy error due to user deploy config for kubectl deployer\n - DEPLOY_KUSTOMIZE_USER_ERR: Deploy error due to user deploy config for kustomize deployer\n - DEPLOY_REPLACE_IMAGE_ERR: Error replacing a built artifact in the manifests\n - DEPLOY_TRANSFORM_MANIFEST_ERR: Error transforming a manifest during skaffold debug\n - DEPLOY_SET_LABEL_ERR: Error setting user specified additional labels.\n - DEPLOY_MANIFEST_WRITE_ERR: Error writing hydrated kubernetes manifests.\n - DEPLOY_PARSE_MANIFEST_IMAGES_ERR: Error getting images from a kubernetes manifest.\n - DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE: Helm config `createNamespace` not available\n - TEST_USER_CONFIG_ERR: Error expanding paths\n - TEST_CST_USER_ERR: Error running container-structure-test\n - TEST_IMG_PULL_ERR: Unable to docker pull image"
    },
    "protoSuggestion": {
      "type": "object",
      "properties": {
        "suggestionCode": {
          "$ref": "#/definitions/protoSuggestionCode"
        },
        "action": {
          "type": "string"
        }
      },
      "description": "Suggestion defines the action a user needs to recover from an error."
    },
    "protoSuggestionCode": {
      "type": "string",
      "enum": [
        "NIL",
        "ADD_DEFAULT_REPO",
        "CHECK_DEFAULT_REPO",
        "CHECK_DEFAULT_REPO_GLOBAL_CONFIG",
        "GCLOUD_DOCKER_AUTH_CONFIGURE",
        "DOCKER_AUTH_CONFIGURE",
        "CHECK_GCLOUD_PROJECT",
        "CHECK_DOCKER_RUNNING",
        "FIX_USER_BUILD_ERR",
        "DOCKER_BUILD_RETRY",
        "FIX_CACHE_FROM_ARTIFACT_CONFIG",
        "FIX_SKAFFOLD_CONFIG_DOCKERFILE",
        "FIX_JIB_PLUGIN_CONFIGURATION",
        "FIX_DOCKER_NETWORK_CONTAINER_NAME",
        "CHECK_DOCKER_NETWORK_CONTAINER_RUNNING",
        "CHECK_CLUSTER_CONNECTION",
        "CHECK_MINIKUBE_STATUS",
        "INSTALL_HELM",
        "UPGRADE_HELM",
        "FIX_SKAFFOLD_CONFIG_HELM_ARTIFACT_OVERRIDES",
        "UPGRADE_HELM32",
        "FIX_SKAFFOLD_CONFIG_HELM_CREATE_NAMESPACE",
        "INSTALL_KUBECTL",
        "CHECK_CONTAINER_LOGS",
        "CHECK_READINESS_PROBE",
        "CHECK_CONTAINER_IMAGE",
        "ADDRESS_NODE_MEMORY_PRESSURE",
        "ADDRESS_NODE_DISK_PRESSURE",
        "ADDRESS_NODE_NETWORK_UNAVAILABLE",
        "ADDRESS_NODE_PID_PRESSURE",
        "ADDRESS_NODE_UNSCHEDULABLE",
        "ADDRESS_NODE_UNREACHABLE",
        "ADDRESS_NODE_NOT_READY",
        "ADDRESS_FAILED_SCHEDULING",
        "CHECK_HOST_CONNECTION",
        "START_MINIKUBE",
        "UNPAUSE_MINIKUBE",
        "RUN_DOCKER_PULL",
        "SET_RENDER_FLAG_OFFLINE_FALSE",
        "OPEN_ISSUE"
      ],
      "default": "NIL",
      "description": "Enum for Suggestion codes\n- NIL: default nil suggestion.\nThis is usually set when no error happens.\n - ADD_DEFAULT_REPO: Add Default Repo\n - CHECK_DEFAULT_REPO: Verify Default Repo\n - CHECK_DEFAULT_REPO_GLOBAL_CONFIG: Verify default repo in the global config\n - GCLOUD_DOCKER_AUTH_CONFIGURE: run gcloud docker auth configure\n - DOCKER_AUTH_CONFIGURE: Run docker auth configure\n - CHECK_GCLOUD_PROJECT: Verify Gcloud Project\n - CHECK_DOCKER_RUNNING: Check if docker is running\n - FIX_USER_BUILD_ERR: Fix User Build Error\n - DOCKER_BUILD_RETRY: Docker build internal error, try again\n - FIX_CACHE_FROM_ARTIFACT_CONFIG: Fix `cacheFrom` config for given artifact and try again\n - FIX_SKAFFOLD_CONFIG_DOCKERFILE: Fix `dockerfile` config for a given artifact and try again.\n - FIX_JIB_PLUGIN_CONFIGURATION: Use a supported Jib plugin type\n - FIX_DOCKER_NETWORK_CONTAINER_NAME: Docker build network invalid docker container name (or id).\n - CHECK_DOCKER_NETWORK_CONTAINER_RUNNING: Docker build network container not existing in the current context.\n - CHECK_CLUSTER_CONNECTION: Check cluster connection\n - CHECK_MINIKUBE_STATUS: Check minikube status\n - INSTALL_HELM: Install helm tool\n - UPGRADE_HELM: Upgrade helm tool\n - FIX_SKAFFOLD_CONFIG_HELM_ARTIFACT_OVERRIDES: Fix helm `releases.artifactOverrides` config to match with `build.artiofacts`\n - UPGRADE_HELM32: Upgrade helm version to v3.2.0 and higher.\n - FIX_SKAFFOLD_CONFIG_HELM_CREATE_NAMESPACE: Set `releases.createNamespace` to false.\n - INSTALL_KUBECTL: Install kubectl tool\n - CHECK_CONTAINER_LOGS: Container run error\n - CHECK_READINESS_PROBE: Pod Health check error\n - CHECK_CONTAINER_IMAGE: Check Container image\n - ADDRESS_NODE_MEMORY_PRESSURE: Node pressure error\n - ADDRESS_NODE_DISK_PRESSURE: Node disk pressure error\n - ADDRESS_NODE_NETWORK_UNAVAILABLE: Node network unavailable error\n - ADDRESS_NODE_PID_PRESSURE: Node PID pressure error\n - ADDRESS_NODE_UNSCHEDULABLE: Node unschedulable error\n - ADDRESS_NODE_UNREACHABLE: Node unreachable error\n - ADDRESS_NODE_NOT_READY: Node not ready error\n - ADDRESS_FAILED_SCHEDULING: Scheduler failure error\n - CHECK_HOST_CONNECTION: Cluster Connectivity error\n - START_MINIKUBE: Minikube is stopped: use `minikube start`\n - UNPAUSE_MINIKUBE: Minikube is paused: use `minikube unpause`\n - RUN_DOCKER_PULL: Run Docker pull for the image with v1 manifest and try again.\n - SET_RENDER_FLAG_OFFLINE_FALSE: Rerun with correct offline flag value.\n - OPEN_ISSUE: Open an issue so this situation can be diagnosed"
    },
    "protoTerminationEvent": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "err": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "`TerminationEvent` marks the end of the skaffold session"
    },
    "protoTestEvent": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "actionableErr": {
          "$ref": "#/definitions/protoActionableErr"
        }
      },
      "description": "`TestEvent` represents the status of a test, and is emitted by Skaffold\nanytime a test starts or completes, successfully or not."
    },
    "protoTestMetadata": {
      "type": "object",
      "properties": {
        "Testers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestMetadataTester"
          }
        }
      },
      "description": "TestMetadata describes the test pipeline"
    },
    "protoTestState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the current test"
        },
        "statusCode": {
          "$ref": "#/definitions/protoStatusCode",
          "description": "Teststate status code"
        }
      },
      "description": "`TestState` describes the current state of the test"
    },
    "protoTesterType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TEST_TYPE",
        "UNIT",
        "CONTAINER_STRUCTURE_TEST"
      ],
      "default": "UNKNOWN_TEST_TYPE",
      "description": "Enum indicating test tools used\n- UNKNOWN_TEST_TYPE: Could not determine Test Type\n - UNIT: Unit tests\n - CONTAINER_STRUCTURE_TEST: Container Structure tests"
    },
    "protoTriggerState": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "TriggerState represents trigger state for a given phase."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "x-stream-definitions": {
    "protoLogEntry": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/protoLogEntry"
        },
        "error": {
          "$ref": "#/definitions/runtimeStreamError"
        }
      },
      "description": "Stream result of protoLogEntry"
    }
  }
}
